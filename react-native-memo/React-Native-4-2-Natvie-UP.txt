1. SafeAreaView component
해당 컴포넌트로 둘러싸인 컴포넌트들은 노치(휴대폰 상단 가려지는 부분)을 침범하지 않고 렌더링된다.
=> android에서 사용했는데 style 에러가 의도치않게 발생한다.
=> flex : 1을 받아야 동작한다.


2. StyleSheet 색상 글로벌 영역 관리 파일
js 파일 만들고 export/import 로직을 활용하여 색상을 관리한다.


3. 무작위 수 생성, 사용, 디스플레이
startGame 컴포넌트에서 TextInput에 두 개의 숫자를 주고 유효성 검사를 통과하면 1~100 사이의 숫자 랜덤한 숫자를 
띄어주는 gameScreen 컴포넌트로 이동한다. => 아직은 두 컴포넌트의 관련성을 만들진 않았다.

** borderRadius는 ios에서 text style에 바로 적용할 수 없다. <View><Text/><View>로 감싸고 view에 style을 줘야
동작한다.


4. 계단식 Style 구현하기
children 로직을 통한 커스텀 컴포넌트는 props를 받아서 속성이나 화면을 구성한다.
*** 이 떄 style props는 배열을 받아서 처리할 수 있는데 파싱은 오른쪽에서 왼쪽으로 되기 떄문에 맨
마지막의 style이 우선사항이 제일 높다.


5. 아이콘으로 작업하기
expo 프로젝트는 아이콘을 사용할 수 있는 라이브러리를 제공한다.
import {....} from "@expo/vector/icons"
https://icons.expo.fyi/Index => 해당 사이트를 통해서 가져올 아이콘을 선택하여 사용한다.


6. 커스텀 폰트 추가 & 사용
npx expo install expo-font => app-loading 사라져서 에러가 발생한다.
Splash 활용법을 알아야 한다.


7. 중첩 텍스트 사용/ 스타일링하기
<Text> 태그안에 또 다른 Text을 감쌀 수 있다. => 다른 스타일링이 가능하다.
중첩된 <Text>는 부모 <Text>의 style에 영향을 받는다.


8. FlatList
부모 컨테이너를 통해 높이를 제한하면 flatList의 스크롤 영역을 고정시킬 수 있다.
=> 원치 않는 효과 발생을 제거한다.